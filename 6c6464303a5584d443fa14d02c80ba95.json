{"posts": [{"title": "Vivado2020.2\u5b89\u88c5", "date": "2021-03-20T14:30:00-00.00", "path": "/archives/vivado20/", "text": "\u7531\u4e8e2015.4\u7248\u672c\u4e0d\u652f\u63014K\u5206\u8fa8\u7387\uff0c\u53ea\u80fd\u8f6c\u5411\u65b0\u7248\u672c\u3002\u8f6f\u4ef6\u4e0b\u8f7d\n\u8fdb\u5165\u4e0b\u8f7d\u5730\u5740\u540e\uff0c\u4e0b\u62c9\u53ef\u4ee5\u770b\u89c1\u6709\u4e09\u4e2a\u4e0b\u8f7d\u5730\u5740\nDownload_Page\n\u7b2c\u4e00\u4e2a Xilinx Unified Installer 2020.2: Windows Self Extracting Web Installer\uff0c\u4e5f\u662f\u672c\u6587\u6240\u91c7\u53d6\u4e0b\u8f7d\u65b9\u6848\u3002\u6587\u4ef6\u540d\u5df2\u7ecf\u5199\u7684\u5f88\u6e05\u695a\uff0cWeb Installer\uff0c\u7c7b\u4f3c\u4e8e\u9e45\u5382\u5927\u578b\u6e38\u620f\u7684\u4e0b\u8f7d\u5668\n\u7b2c\u4e09\u4e2a Vivado HLx 2020.2: All OS installer Single-File Download\uff0c\u5355\u6587\u4ef6\u4e0b\u8f7d\u5230\u672c\u5730\u540e\u518d\u5b89\u88c5\n\u4e24\u8005\u5176\u5b9e\u90fd\u53ef\u4ee5\uff0c\u4f46\u662fSingle-File\u5b9e\u5728\u592a\u5927\uff0c\u4e0b\u8f7d\u65f6\u6613\u53d7\u7f51\u7edc\u5f71\u54cd\uff0c\u6545\u9009\u62e9\u7b2c\u4e00\u79cd\u65b9\u6848\uff0c\u5373\u4e0b\u8f7d\u7684\u6587\u4ef6\u4e3aXilinx_Unified_2020.2_1118_1232_Win64.exe\n\u6ce8\u610f\uff1a\u5728\u8fdb\u884c\u4e0b\u8f7d\u64cd\u4f5c\u4e4b\u524d\u4e00\u5b9a\u8981\u6ce8\u518c\u597dXilinx\u7684\u8d26\u53f7\uff01\n\u8f6f\u4ef6\u5b89\u88c5\n\u6253\u5f00Installer\u540e\uff0c\u7b49\u5f85\u8fdb\u5ea6\u6761\u52a0\u8f7d\uff0c\u8fdb\u5165Welcome\u754c\u9762\uff0c\u70b9\u51fbNext\u7ee7\u7eed\nWelcome\n\u8fdb\u5165Select Install Type\uff0c\u586b\u5199\u597d\u4f60\u7684Xilinx\u6ce8\u518c\u7684Email\u5730\u5740\u4ee5\u53ca\u5bc6\u7801\uff0c\u9009\u9879\u9ed8\u8ba4\nSelect Install Type\n\u9009\u62e9\u5b89\u88c5\u7684\u4ea7\u54c1\uff0c\u8fd9\u91cc\u9009\u62e9\u7b2c\u4e8c\u4e2aVivado\uff0c\u7b2c\u4e00\u4e2aVitis\u662fXilinx\u7684\u4e0b\u4e00\u4ee3\u4ea7\u54c1\nSelect Product\n\u7248\u672c\u9009\u62e9\u514d\u8d39\u7684webPACK\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u9009\u9879\nSelect Edition\n\u8fd9\u91cc\u9ed8\u8ba4\u9009\u9879\uff0c\u4e0d\u9700\u8981\u52a8\nVivado HL WebPACK\n\u52fe\u9009\u4e09\u4e2aI Agree\nAccept License Agreements\n\u5b89\u88c5\u76ee\u5f55\u53ef\u81ea\u5df1\u9009\u62e9\uff0c\u4f46\u662f\u76ee\u5f55\u4e2d\u4e0d\u80fd\u542b\u6709\u4e2d\u6587\uff01\u5176\u4f59\u4fdd\u6301\u9ed8\u8ba4\nSelect Destination Directory\n\u5b89\u88c5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0cYes\u521b\u5efa\n\u521b\u5efa\u76ee\u5f55\n\u603b\u89c8\u5b89\u88c5\u914d\u7f6e\uff0cInstall\nInstallation Summary\n\u7b49\u5f85\u5b89\u88c5\u8fdb\u7a0b\u5b8c\u6210\uff0c\u5927\u7ea6\u4e24\u5c0f\u65f6\uff0c\u5b89\u88c5\u597d\u540e\u4f1a\u6709\u4e00\u4e2a\u5f39\u7a97\uff0c\u7136\u540e\u684c\u9762\u4e0a\u5c31\u4f1a\u51fa\u73b0\u56db\u4e2a\u5feb\u6377\u65b9\u5f0f\uff0c\u5b89\u88c5\u5b8c\u6bd5\uff01\nInstallation Progress\nHave a nice day\uff01\n", "categories": [{"name": "\u8ba1\u7b97\u673a\u7ec4\u6210", "slug": "\u8ba1\u7b97\u673a\u7ec4\u6210", "permalink": "/category/\u8ba1\u7b97\u673a\u7ec4\u6210/"}], "tags": [{"name": "Vivado", "slug": "Vivado", "permalink": "/tag/Vivado/"}]}, {"title": "\u5b9a\u65f6\u722c\u53d6\u6559\u52a1\u7f51\u4fe1\u606f\u5e76\u81ea\u52a8\u53d1\u4fe1", "date": "2020-03-16T20:30:00-00.00", "path": "/archives/njitjww/", "text": "\u4e0d\u60f3\u6bcf\u5929\u90fd\u70b9\u5f00\u6559\u52a1\u7f51\uff0c\u53c8\u4e0d\u60f3\u9519\u8fc7\u91cd\u8981\u7684\u4fe1\u606f\uff0c\u4e8e\u662f\u5199\u4e86\u4e2a\u7b80\u5355\u7684\u722c\u866b\u6765\u5077\u61d2\u6570\u636e\u722c\u53d6\nF12\u4e4b\u540e\uff0c\u53d1\u73b0\u5185\u5bb9\u9875\u7684url\u5728\u8fd9\u4e2a\u6807\u7b7e\u91cc\uff0c\u4f46\u7531\u4e8e\u5b66\u6821\u6559\u52a1\u7f51\u524d\u7aef\u505a\u7684\u82b1\u91cc\u80e1\u54e8\uff0c\u8fd9\u91cc\u53ea\u80fd\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u6293\u53d6url\nF12_url\n\u5229\u7528requests+beautifulsoup\u8fdb\u884curl\u7684\u6293\u53d6\u5e76\u8fd4\u56de\u4e00\u4e2alist:\ndef get_url():\n    url = &#39;http://jwc.njit.edu.cn/&#39;\n    r = requests.get(url)\n    soup = BeautifulSoup(r.text, &#39;html.parser&#39;)\n    links = soup.find_all(href=re.compile(&quot;content.jsp&quot;),target=&quot;_blank&quot;,limit=13)\n    main_url = &#39;http://jwc.njit.edu.cn/&#39;\n    url_lists = []\n    for link in links:\n        a = link[&#39;href&#39;]\n        url_lists.append(main_url+a)\n    return url_lists\n\n\u6559\u52a1\u7f51\u5e73\u65f6\u4e5f\u4f1a\u5bf9\u7f51\u7ad9\u8fdb\u884c\u66f4\u65b0\u7ef4\u62a4\uff0climit\u7684\u503c\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u8fdb\u884c\u8bbe\u5b9a\uff0curl_lists\u91cc\u7684\u5143\u7d20\u4e5f\u662f\n\u83b7\u53d6\u4e86\u6587\u7ae0\u7684url\u4e4b\u540e\uff0c\u5c31\u662f\u83b7\u53d6\u6587\u7ae0\u7684\u6807\u9898\u548c\u53d1\u5e03\u65f6\u95f4\uff0c\u4e8e\u662f\u7ee7\u7eedF12\nF12_title_pubdate\n\u8fd9\u4e24\u4e2a\u503c\u662f\u5f88\u597d\u83b7\u53d6\u7684\uff0c\u4f46\u6709\u7684\u7f51\u9875\u662f\u9700\u8981\u5185\u7f51\u6743\u9650\u7684\uff0c\u6ca1\u6709title\uff0c\u6ce8\u610f\u6392\u9664\u6b64\u7c7b\u5e72\u6270\ndef get_content():\n    title_list = []\n    for url in get_url():\n        r = requests.get(url=url)\n        r.encoding = &#39;utf-8&#39;\n        soup = BeautifulSoup(r.text, &#39;html.parser&#39;)\n        titles = soup.find(&#39;h2&#39;, class_=&quot;title&quot;)\n        if titles is None:\n            continue\n        title = titles.get_text()\n        pub_data_text = soup.find(&#39;p&#39;,text=re.compile(&quot;\\\\d{4}-\\\\d{2}-\\\\d{2}&quot;)).text\n\n\u5176\u4e2dr.encoding = 'utf-8'\u662f\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u4e2d\u6587\u4e71\u7801\u7684\u95ee\u9898\n\u90ae\u4ef6\u53d1\u9001\n\u4ee3\u7801\u5b9e\u73b0\uff1a\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n\ndef sent_email(mail_title,mail_body):\n    sender = &#39;**********&#39;\n    receiver = &#39;*********&#39;\n    smtpServer = &#39;smtp.126.com&#39;\n    username = &#39;*********&#39;\n    password = &#39;*********&#39;\n    mail_title = mail_title\n    mail_body = mail_body\n\n    message = MIMEText(mail_body, &#39;plain&#39;, &#39;utf-8&#39;)\n    message[&quot;Accept-Language&quot;] = &quot;zh-CN&quot;\n    message[&quot;Accept-Charset&quot;] = &quot;ISO-8859-1,utf-8&quot;\n    message[&#39;From&#39;] = sender\n    message[&#39;To&#39;] = receiver\n    message[&#39;Subject&#39;] = Header(mail_title, &#39;utf-8&#39;)\n\n    try:\n        smtp = smtplib.SMTP()\n        smtp.connect(smtpServer)\n        smtp.login(username, password)\n        smtp.sendmail(sender, receiver, message.as_string())\n        print(&#39;\u90ae\u4ef6\u53d1\u9001\u6210\u529f&#39;)\n        smtp.quit()\n    except smtplib.SMTPException:\n        print(&quot;\u90ae\u4ef6\u53d1\u9001\u5931\u8d25\uff01\uff01\uff01&quot;)\n\n\u5176\u4e2d\uff0cusername\u662f\u4f60\u7684\u90ae\u7bb1\u8d26\u53f7\uff0cpassword\u662f\u4f60\u7684SMTP\u6388\u6743\u7801\n\u5b9a\u65f6\u6267\u884c\n\u5229\u7528\u817e\u8baf\u4e91\u4e91\u51fd\u6570\uff0c\u8f7b\u677e\u5077\u61d2\uff0c\u5177\u4f53\u914d\u7f6e\u5982\u4e0b\uff1a\n\n\n\u5173\u4e8e\u5b9a\u65f6\u89e6\u53d1\u5668\u7684\u8bbe\u7f6e\uff0c\u6211\u7684\u601d\u8def\u662f\uff1a\n\u5b66\u6821\u4e00\u822c\u572811\uff1a00-2\uff1a00\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u53d1\u901a\u77e5\uff0c2\uff1a30\u7684\u89e6\u53d1\u5668\u4fdd\u8bc1\u4e86\u65f6\u6548\u6027\uff0c23\uff1a55\u7684\u662f\u9632\u6b62\u9057\u6f0f\n\u5168\u90e8\u4ee3\u7801\u5b9e\u73b0\uff1a\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport time\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email.header import Header\n\ndef get_url():\n    url = &#39;http://jwc.njit.edu.cn/&#39;\n    r = requests.get(url)\n    soup = BeautifulSoup(r.text, &#39;html.parser&#39;)\n    links = soup.find_all(href=re.compile(&quot;content.jsp&quot;),target=&quot;_blank&quot;,limit=13)\n    main_url = &#39;http://jwc.njit.edu.cn/&#39;\n    url_lists = []\n    for link in links:\n        a = link[&#39;href&#39;]\n        url_lists.append(main_url+a)\n    return url_lists\n\ndef get_content():\n    title_list = []\n    for url in get_url():\n        r = requests.get(url=url)\n        r.encoding = &#39;utf-8&#39;\n        soup = BeautifulSoup(r.text, &#39;html.parser&#39;)\n        titles = soup.find(&#39;h2&#39;, class_=&quot;title&quot;)\n        if titles is None:\n            continue\n        title = titles.get_text()\n        pub_data_text = soup.find(&#39;p&#39;,text=re.compile(&quot;\\\\d{4}-\\\\d{2}-\\\\d{2}&quot;)).text\n        pub_data=pub_data_text.replace(&#39;\u65f6\u95f4:&#39;,&#39;&#39;)\n        current_time = time.strftime(&#39;%Y-%m-%d&#39;, time.localtime())\n        if pub_data == current_time:\n            title_list.append(pub_data + &quot; \uff1b \u4eca\u65e5\u901a\u77e5\uff1a&quot; + title + &quot;\uff1b&quot; + &quot;\u8be6\u60c5\u70b9\u51fb\uff1a &quot; + url)\n    if len(title_list) == 0:\n        sent_email(mail_title=&#39;\u4eca\u65e5\u6ca1\u6709\u901a\u77e5&#39;,mail_body=&#39;\u4eca\u5929\u6ca1\u6709\u901a\u77e5&#39;)\n    else:\n        for title in title_list:\n            sent_email(mail_title=&#39;\u4eca\u65e5\u901a\u77e5&#39;,mail_body=title)\n    title_list.clear()\n\ndef sent_email(mail_title,mail_body):\n    sender = &#39;**********&#39;\n    receiver = &#39;*********&#39;\n    smtpServer = &#39;smtp.126.com&#39;\n    username = &#39;*********&#39;\n    password = &#39;*********&#39;\n    mail_title = mail_title\n    mail_body = mail_body\n\n    message = MIMEText(mail_body, &#39;plain&#39;, &#39;utf-8&#39;)\n    message[&quot;Accept-Language&quot;] = &quot;zh-CN&quot;\n    message[&quot;Accept-Charset&quot;] = &quot;ISO-8859-1,utf-8&quot;\n    message[&#39;From&#39;] = sender\n    message[&#39;To&#39;] = receiver\n    message[&#39;Subject&#39;] = Header(mail_title, &#39;utf-8&#39;)\n\n    try:\n        smtp = smtplib.SMTP()\n        smtp.connect(smtpServer)\n        smtp.login(username, password)\n        smtp.sendmail(sender, receiver, message.as_string())\n        print(&#39;\u90ae\u4ef6\u53d1\u9001\u6210\u529f&#39;)\n        smtp.quit()\n    except smtplib.SMTPException:\n        print(&quot;\u90ae\u4ef6\u53d1\u9001\u5931\u8d25\uff01\uff01\uff01&quot;)\n\ndef main(self1,self2):\n    get_content()\n\n\u9879\u76ee\u5730\u5740\u2190\u6233\u6211\n", "categories": [{"name": "Python", "slug": "Python", "permalink": "/category/Python/"}], "tags": [{"name": "Python", "slug": "Python", "permalink": "/tag/Python/"}, {"name": "\u722c\u866b", "slug": "\u722c\u866b", "permalink": "/tag/\u722c\u866b/"}, {"name": "\u5357\u4eac\u5de5\u7a0b\u5b66\u9662", "slug": "\u5357\u4eac\u5de5\u7a0b\u5b66\u9662", "permalink": "/tag/\u5357\u4eac\u5de5\u7a0b\u5b66\u9662/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2020-01-17T20:34:00-00.00", "path": "/archives/my-first-awesome-post/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n\u5e7d\u7075\u516c\u4e3b\u5267\u7167\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/tag/GitHub/"}]}, {"title": "Hello World!", "date": "2019-12-18T16:50:00-00.00", "path": "/archives/typography/", "text": "\u8fd9\u662f\u4e00\u7bc7\u793a\u4f8b\u6587\u7ae0\uff0c\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u770b\u5230\u5e38\u7528\u9875\u9762\u5143\u7d20\u7684\u663e\u793a\u6548\u679c\uff0c\u540c\u65f6\u4e5f\u662f Markdown \u8bed\u6cd5\u7684\u53c2\u8003\u6587\u7ae0\u3002\u4fdd\u7559\u6216\u8005\u5220\u9664\u672c\u6587\uff0c\u5f00\u59cb\u81ea\u5df1\u7684\u521b\u4f5c\u5427\uff01L2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.\nWe are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.\nInline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002\nBlockquote and nested blockquote\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\n\nCode\nInline code: int a=1;. Code block:\nint main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:\n$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess Mononoke\nPhotoset\n\n\n\n\n\n\nTable\n\n\nheader\nheader\n\n\n\n\ncell 1\ncell 2\n\n\ncell 3\ncell 4\n\n\n\nLink Card\n\n                                  AlanDecodeHome page for AlanDecode \u21a9", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}, {"name": "Typography", "slug": "Typography", "permalink": "/tag/Typography/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002\nContact\nEmail: admin#zhangshanbeng.com (replace # with @)\n", "categories": [], "tags": []}]}